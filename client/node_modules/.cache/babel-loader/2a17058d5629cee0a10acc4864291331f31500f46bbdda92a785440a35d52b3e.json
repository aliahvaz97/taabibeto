{"ast":null,"code":"import React,{useState}from'react';import PhoneInput from'react-phone-input-2';import'react-phone-input-2/lib/style.css';import'./login.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUpWithPhone=_ref=>{let{onLoginSuccess}=_ref;const[phoneNumber,setPhoneNumber]=useState('');const[lastName,setLastName]=useState('');const[otpSent,setOtpSent]=useState(false);const[otp,setOtp]=useState('');const handleSendOtp=async()=>{if(phoneNumber&&lastName){try{const response=await axios.post('/api/send-otp',{phoneNumber,lastName});setOtpSent(true);console.log(response.data.message);// پیام موفقیت\n}catch(error){console.error('Error sending OTP:',error);alert('خطا در ارسال کد تایید.');}}else{alert('لطفاً شماره تلفن و نام خانوادگی را وارد کنید.');}};const handleVerifyOtp=async()=>{if(otp){try{const response=await axios.post('/api/verify-otp',{phoneNumber,otp});console.log(response.data.message);// پیام تایید موفقیت\nonLoginSuccess();}catch(error){console.error('Error verifying OTP:',error);alert('کد یکبار مصرف نامعتبر است.');}}else{alert('لطفاً کد یکبار مصرف را وارد کنید.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"signup-container\",children:!otpSent?/*#__PURE__*/_jsxs(\"div\",{className:\"form-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",value:lastName,onChange:e=>setLastName(e.target.value),required:true}),/*#__PURE__*/_jsx(PhoneInput,{country:'ir',value:phoneNumber,onChange:value=>setPhoneNumber(value),inputStyle:{width:'100%',borderRadius:'5px',borderColor:'#ccc',height:'40px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendOtp,children:\"\\u0627\\u062F\\u0627\\u0645\\u0647\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"form-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u062A\\u0627\\u06CC\\u06CC\\u062F \\u06A9\\u062F \\u06CC\\u06A9\\u0628\\u0627\\u0631 \\u0645\\u0635\\u0631\\u0641\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u06A9\\u062F \\u06CC\\u06A9\\u0628\\u0627\\u0631 \\u0645\\u0635\\u0631\\u0641\",value:otp,onChange:e=>setOtp(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleVerifyOtp,children:\"\\u062A\\u0627\\u06CC\\u06CC\\u062F\"})]})});};export default SignUpWithPhone;","map":{"version":3,"names":["React","useState","PhoneInput","axios","jsx","_jsx","jsxs","_jsxs","SignUpWithPhone","_ref","onLoginSuccess","phoneNumber","setPhoneNumber","lastName","setLastName","otpSent","setOtpSent","otp","setOtp","handleSendOtp","response","post","console","log","data","message","error","alert","handleVerifyOtp","className","children","type","placeholder","value","onChange","e","target","required","country","inputStyle","width","borderRadius","borderColor","height","onClick"],"sources":["C:/Users/vipim/taabibeto/client/src/login/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport './login.css';\nimport axios from 'axios';\n\nconst SignUpWithPhone = ({ onLoginSuccess }) => {\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n\n  const handleSendOtp = async () => {\n    if (phoneNumber && lastName) {\n      try {\n        const response = await axios.post('/api/send-otp', { phoneNumber, lastName });\n        setOtpSent(true);\n        console.log(response.data.message); // پیام موفقیت\n      } catch (error) {\n        console.error('Error sending OTP:', error);\n        alert('خطا در ارسال کد تایید.');\n      }\n    } else {\n      alert('لطفاً شماره تلفن و نام خانوادگی را وارد کنید.');\n    }\n  };\n\n  const handleVerifyOtp = async () => {\n    if (otp) {\n      try {\n        const response = await axios.post('/api/verify-otp', { phoneNumber, otp });\n        console.log(response.data.message); // پیام تایید موفقیت\n        onLoginSuccess();\n      } catch (error) {\n        console.error('Error verifying OTP:', error);\n        alert('کد یکبار مصرف نامعتبر است.');\n      }\n    } else {\n      alert('لطفاً کد یکبار مصرف را وارد کنید.');\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      {!otpSent ? (\n        <div className=\"form-box\">\n          <h2>ثبت نام</h2>\n          <input\n            type=\"text\"\n            placeholder=\"نام خانوادگی\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n            required\n          />\n          <PhoneInput\n            country={'ir'}\n            value={phoneNumber}\n            onChange={(value) => setPhoneNumber(value)}\n            inputStyle={{\n              width: '100%',\n              borderRadius: '5px',\n              borderColor: '#ccc',\n              height: '40px',\n            }}\n          />\n          <button onClick={handleSendOtp}>ادامه</button>\n        </div>\n      ) : (\n        <div className=\"form-box\">\n          <h2>تایید کد یکبار مصرف</h2>\n          <input\n            type=\"text\"\n            placeholder=\"کد یکبار مصرف\"\n            value={otp}\n            onChange={(e) => setOtp(e.target.value)}\n            required\n          />\n          <button onClick={handleVerifyOtp}>تایید</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SignUpWithPhone;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}