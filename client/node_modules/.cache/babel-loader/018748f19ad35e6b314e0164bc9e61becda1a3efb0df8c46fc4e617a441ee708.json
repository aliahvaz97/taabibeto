{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vipim\\\\taabibeto\\\\client\\\\src\\\\login\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport './login.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpWithPhone = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [message, setMessage] = useState(''); // برای نمایش پیام‌ها\n  const [loading, setLoading] = useState(false); // برای مدیریت وضعیت بارگذاری\n\n  // تابع ارسال کد OTP\n  const handleSendOtp = async () => {\n    if (phoneNumber && lastName) {\n      setLoading(true); // فعال کردن حالت بارگذاری\n      try {\n        const response = await axios.post('/api/send-otp', {\n          phoneNumber,\n          lastName\n        });\n        setOtpSent(true); // اگر ارسال موفق بود، وضعیت otpSent تغییر می‌کند\n        setMessage(response.data.message); // پیام موفقیت را نمایش می‌دهد\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error sending OTP:', error);\n        setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'خطا در ارسال کد تایید.'); // نمایش پیام خطا\n      } finally {\n        setLoading(false); // غیرفعال کردن حالت بارگذاری\n      }\n    } else {\n      setMessage('لطفاً شماره تلفن و نام خانوادگی را وارد کنید.');\n    }\n  };\n\n  // تابع تایید کد OTP\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      setMessage('لطفاً کد یکبار مصرف را وارد کنید.');\n      return;\n    }\n    if (!/^\\d{6}$/.test(otp)) {\n      // بررسی اینکه کد OTP دقیقاً 6 رقم باشد\n      setMessage('کد یکبار مصرف باید 6 رقم باشد.');\n      return;\n    }\n    setLoading(true); // فعال کردن حالت بارگذاری\n    try {\n      const response = await axios.post('/api/verify-otp', {\n        phoneNumber,\n        otp\n      }); // ارسال درخواست تایید کد OTP\n      setMessage(response.data.message); // نمایش پیام موفقیت پس از تایید\n      onLoginSuccess(); // اگر تایید موفقیت‌آمیز بود، به تابع موفقیت ورود می‌فرستد\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error verifying OTP:', error); // لاگ خطا در کنسول\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'کد یکبار مصرف نامعتبر است.'); // نمایش پیام خطا در صورت بروز مشکل\n    } finally {\n      setLoading(false); // غیرفعال کردن حالت بارگذاری پس از اتمام عملیات\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: otpSent ? 'تایید کد یکبار مصرف' : 'ثبت نام'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), \" \", !otpSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",\n          value: lastName,\n          onChange: e => setLastName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n          country: 'ir',\n          value: phoneNumber,\n          onChange: value => setPhoneNumber(value),\n          inputStyle: {\n            width: '100%',\n            borderRadius: '5px',\n            borderColor: '#ccc',\n            height: '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendOtp,\n          disabled: loading,\n          children: loading ? 'در حال ارسال...' : 'ادامه'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u06A9\\u062F \\u06CC\\u06A9\\u0628\\u0627\\u0631 \\u0645\\u0635\\u0631\\u0641\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVerifyOtp,\n          disabled: loading,\n          children: loading ? 'در حال تایید...' : 'تایید'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpWithPhone, \"lrNj6aDvTbU/x9DlR+B40WGGOOk=\");\n_c = SignUpWithPhone;\nexport default SignUpWithPhone;\nvar _c;\n$RefreshReg$(_c, \"SignUpWithPhone\");","map":{"version":3,"names":["React","useState","PhoneInput","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpWithPhone","onLoginSuccess","_s","phoneNumber","setPhoneNumber","lastName","setLastName","otpSent","setOtpSent","otp","setOtp","message","setMessage","loading","setLoading","handleSendOtp","response","post","data","error","_error$response","_error$response$data","console","handleVerifyOtp","test","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","country","inputStyle","width","borderRadius","borderColor","height","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vipim/taabibeto/client/src/login/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport './login.css';\nimport axios from 'axios';\n\nconst SignUpWithPhone = ({ onLoginSuccess }) => {\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [message, setMessage] = useState(''); // برای نمایش پیام‌ها\n  const [loading, setLoading] = useState(false); // برای مدیریت وضعیت بارگذاری\n\n  // تابع ارسال کد OTP\n  const handleSendOtp = async () => {\n    if (phoneNumber && lastName) {\n      setLoading(true); // فعال کردن حالت بارگذاری\n      try {\n        const response = await axios.post('/api/send-otp', { phoneNumber, lastName });\n        setOtpSent(true); // اگر ارسال موفق بود، وضعیت otpSent تغییر می‌کند\n        setMessage(response.data.message); // پیام موفقیت را نمایش می‌دهد\n      } catch (error) {\n        console.error('Error sending OTP:', error);\n        setMessage(error.response?.data?.message || 'خطا در ارسال کد تایید.'); // نمایش پیام خطا\n      } finally {\n        setLoading(false); // غیرفعال کردن حالت بارگذاری\n      }\n    } else {\n      setMessage('لطفاً شماره تلفن و نام خانوادگی را وارد کنید.');\n    }\n  };\n\n  // تابع تایید کد OTP\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      setMessage('لطفاً کد یکبار مصرف را وارد کنید.');\n      return;\n    }\n\n    if (!/^\\d{6}$/.test(otp)) { // بررسی اینکه کد OTP دقیقاً 6 رقم باشد\n      setMessage('کد یکبار مصرف باید 6 رقم باشد.');\n      return;\n    }\n\n    setLoading(true); // فعال کردن حالت بارگذاری\n    try {\n      const response = await axios.post('/api/verify-otp', { phoneNumber, otp }); // ارسال درخواست تایید کد OTP\n      setMessage(response.data.message); // نمایش پیام موفقیت پس از تایید\n      onLoginSuccess(); // اگر تایید موفقیت‌آمیز بود، به تابع موفقیت ورود می‌فرستد\n    } catch (error) {\n      console.error('Error verifying OTP:', error); // لاگ خطا در کنسول\n      setMessage(error.response?.data?.message || 'کد یکبار مصرف نامعتبر است.'); // نمایش پیام خطا در صورت بروز مشکل\n    } finally {\n      setLoading(false); // غیرفعال کردن حالت بارگذاری پس از اتمام عملیات\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <div className=\"form-box\">\n        <h2>{otpSent ? 'تایید کد یکبار مصرف' : 'ثبت نام'}</h2>\n        {message && <p className=\"message\">{message}</p>} {/* نمایش پیام‌ها */}\n        {!otpSent ? (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"نام خانوادگی\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              required\n            />\n            <PhoneInput\n              country={'ir'}\n              value={phoneNumber}\n              onChange={(value) => setPhoneNumber(value)}\n              inputStyle={{\n                width: '100%',\n                borderRadius: '5px',\n                borderColor: '#ccc',\n                height: '40px',\n              }}\n            />\n            <button onClick={handleSendOtp} disabled={loading}>\n              {loading ? 'در حال ارسال...' : 'ادامه'}\n            </button>\n          </>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"کد یکبار مصرف\"\n              value={otp}\n              onChange={(e) => setOtp(e.target.value)}\n              required\n            />\n            <button onClick={handleVerifyOtp} disabled={loading}>\n              {loading ? 'در حال تایید...' : 'تایید'}\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpWithPhone;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}