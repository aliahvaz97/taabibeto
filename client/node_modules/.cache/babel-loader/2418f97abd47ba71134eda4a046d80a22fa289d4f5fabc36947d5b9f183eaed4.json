{"ast":null,"code":"import React,{useState}from'react';import PhoneInput from'react-phone-input-2';import'react-phone-input-2/lib/style.css';import'./login.css';import axios from'axios';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUpWithPhone=_ref=>{let{onLoginSuccess}=_ref;const[phoneNumber,setPhoneNumber]=useState('');const[lastName,setLastName]=useState('');const[otpSent,setOtpSent]=useState(false);const[otp,setOtp]=useState('');const[message,setMessage]=useState('');// برای نمایش پیام‌ها\nconst[loading,setLoading]=useState(false);// برای مدیریت وضعیت بارگذاری\n// تابع ارسال کد OTP\nconst handleSendOtp=async()=>{if(phoneNumber&&lastName){setLoading(true);// فعال کردن حالت بارگذاری\ntry{const response=await axios.post('/api/send-otp',{phoneNumber,lastName});setOtpSent(true);// اگر ارسال موفق بود، وضعیت otpSent تغییر می‌کند\nsetMessage(response.data.message);// پیام موفقیت را نمایش می‌دهد\n}catch(error){var _error$response,_error$response$data;console.error('Error sending OTP:',error);setMessage(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'خطا در ارسال کد تایید.');// نمایش پیام خطا\n}finally{setLoading(false);// غیرفعال کردن حالت بارگذاری\n}}else{setMessage('لطفاً شماره تلفن و نام خانوادگی را وارد کنید.');}};// تابع تایید کد OTP\nconst handleVerifyOtp=async()=>{if(!otp){setMessage('لطفاً کد یکبار مصرف را وارد کنید.');return;}if(!/^\\d{6}$/.test(otp)){// بررسی اینکه کد OTP دقیقاً 6 رقم باشد\nsetMessage('کد یکبار مصرف باید 6 رقم باشد.');return;}setLoading(true);// فعال کردن حالت بارگذاری\ntry{const response=await axios.post('/api/verify-otp',{phoneNumber,otp});// ارسال درخواست تایید کد OTP\nsetMessage(response.data.message);// نمایش پیام موفقیت پس از تایید\nonLoginSuccess();// اگر تایید موفقیت‌آمیز بود، به تابع موفقیت ورود می‌فرستد\n}catch(error){var _error$response2,_error$response2$data;console.error('Error verifying OTP:',error);// لاگ خطا در کنسول\nsetMessage(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'کد یکبار مصرف نامعتبر است.');// نمایش پیام خطا در صورت بروز مشکل\n}finally{setLoading(false);// غیرفعال کردن حالت بارگذاری پس از اتمام عملیات\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"signup-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:otpSent?'تایید کد یکبار مصرف':'ثبت نام'}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message}),\" \",!otpSent?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",value:lastName,onChange:e=>setLastName(e.target.value),required:true}),/*#__PURE__*/_jsx(PhoneInput,{country:'ir',value:phoneNumber,onChange:value=>setPhoneNumber(value),inputStyle:{width:'100%',borderRadius:'5px',borderColor:'#ccc',height:'40px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendOtp,disabled:loading,children:loading?'در حال ارسال...':'ادامه'})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u06A9\\u062F \\u06CC\\u06A9\\u0628\\u0627\\u0631 \\u0645\\u0635\\u0631\\u0641\",value:otp,onChange:e=>setOtp(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleVerifyOtp,disabled:loading,children:loading?'در حال تایید...':'تایید'})]})]})});};export default SignUpWithPhone;","map":{"version":3,"names":["React","useState","PhoneInput","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SignUpWithPhone","_ref","onLoginSuccess","phoneNumber","setPhoneNumber","lastName","setLastName","otpSent","setOtpSent","otp","setOtp","message","setMessage","loading","setLoading","handleSendOtp","response","post","data","error","_error$response","_error$response$data","console","handleVerifyOtp","test","_error$response2","_error$response2$data","className","children","type","placeholder","value","onChange","e","target","required","country","inputStyle","width","borderRadius","borderColor","height","onClick","disabled"],"sources":["C:/Users/vipim/taabibeto/client/src/login/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport './login.css';\nimport axios from 'axios';\n\nconst SignUpWithPhone = ({ onLoginSuccess }) => {\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [message, setMessage] = useState(''); // برای نمایش پیام‌ها\n  const [loading, setLoading] = useState(false); // برای مدیریت وضعیت بارگذاری\n\n  // تابع ارسال کد OTP\n  const handleSendOtp = async () => {\n    if (phoneNumber && lastName) {\n      setLoading(true); // فعال کردن حالت بارگذاری\n      try {\n        const response = await axios.post('/api/send-otp', { phoneNumber, lastName });\n        setOtpSent(true); // اگر ارسال موفق بود، وضعیت otpSent تغییر می‌کند\n        setMessage(response.data.message); // پیام موفقیت را نمایش می‌دهد\n      } catch (error) {\n        console.error('Error sending OTP:', error);\n        setMessage(error.response?.data?.message || 'خطا در ارسال کد تایید.'); // نمایش پیام خطا\n      } finally {\n        setLoading(false); // غیرفعال کردن حالت بارگذاری\n      }\n    } else {\n      setMessage('لطفاً شماره تلفن و نام خانوادگی را وارد کنید.');\n    }\n  };\n\n  // تابع تایید کد OTP\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      setMessage('لطفاً کد یکبار مصرف را وارد کنید.');\n      return;\n    }\n\n    if (!/^\\d{6}$/.test(otp)) { // بررسی اینکه کد OTP دقیقاً 6 رقم باشد\n      setMessage('کد یکبار مصرف باید 6 رقم باشد.');\n      return;\n    }\n\n    setLoading(true); // فعال کردن حالت بارگذاری\n    try {\n      const response = await axios.post('/api/verify-otp', { phoneNumber, otp }); // ارسال درخواست تایید کد OTP\n      setMessage(response.data.message); // نمایش پیام موفقیت پس از تایید\n      onLoginSuccess(); // اگر تایید موفقیت‌آمیز بود، به تابع موفقیت ورود می‌فرستد\n    } catch (error) {\n      console.error('Error verifying OTP:', error); // لاگ خطا در کنسول\n      setMessage(error.response?.data?.message || 'کد یکبار مصرف نامعتبر است.'); // نمایش پیام خطا در صورت بروز مشکل\n    } finally {\n      setLoading(false); // غیرفعال کردن حالت بارگذاری پس از اتمام عملیات\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <div className=\"form-box\">\n        <h2>{otpSent ? 'تایید کد یکبار مصرف' : 'ثبت نام'}</h2>\n        {message && <p className=\"message\">{message}</p>} {/* نمایش پیام‌ها */}\n        {!otpSent ? (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"نام خانوادگی\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              required\n            />\n            <PhoneInput\n              country={'ir'}\n              value={phoneNumber}\n              onChange={(value) => setPhoneNumber(value)}\n              inputStyle={{\n                width: '100%',\n                borderRadius: '5px',\n                borderColor: '#ccc',\n                height: '40px',\n              }}\n            />\n            <button onClick={handleSendOtp} disabled={loading}>\n              {loading ? 'در حال ارسال...' : 'ادامه'}\n            </button>\n          </>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"کد یکبار مصرف\"\n              value={otp}\n              onChange={(e) => setOtp(e.target.value)}\n              required\n            />\n            <button onClick={handleVerifyOtp} disabled={loading}>\n              {loading ? 'در حال تایید...' : 'تایید'}\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpWithPhone;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,UAAU,KAAM,qBAAqB,CAC5C,MAAO,mCAAmC,CAC1C,MAAO,aAAa,CACpB,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACkB,GAAG,CAAEC,MAAM,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAClC,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC5C,KAAM,CAACsB,OAAO,CAAEC,UAAU,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAE;AAE/C;AACA,KAAM,CAAAwB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAIZ,WAAW,EAAIE,QAAQ,CAAE,CAC3BS,UAAU,CAAC,IAAI,CAAC,CAAE;AAClB,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAvB,KAAK,CAACwB,IAAI,CAAC,eAAe,CAAE,CAAEd,WAAW,CAAEE,QAAS,CAAC,CAAC,CAC7EG,UAAU,CAAC,IAAI,CAAC,CAAE;AAClBI,UAAU,CAACI,QAAQ,CAACE,IAAI,CAACP,OAAO,CAAC,CAAE;AACrC,CAAE,MAAOQ,KAAK,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACdC,OAAO,CAACH,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1CP,UAAU,CAAC,EAAAQ,eAAA,CAAAD,KAAK,CAACH,QAAQ,UAAAI,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBF,IAAI,UAAAG,oBAAA,iBAApBA,oBAAA,CAAsBV,OAAO,GAAI,wBAAwB,CAAC,CAAE;AACzE,CAAC,OAAS,CACRG,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CACF,CAAC,IAAM,CACLF,UAAU,CAAC,+CAA+C,CAAC,CAC7D,CACF,CAAC,CAED;AACA,KAAM,CAAAW,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CAACd,GAAG,CAAE,CACRG,UAAU,CAAC,mCAAmC,CAAC,CAC/C,OACF,CAEA,GAAI,CAAC,SAAS,CAACY,IAAI,CAACf,GAAG,CAAC,CAAE,CAAE;AAC1BG,UAAU,CAAC,gCAAgC,CAAC,CAC5C,OACF,CAEAE,UAAU,CAAC,IAAI,CAAC,CAAE;AAClB,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAvB,KAAK,CAACwB,IAAI,CAAC,iBAAiB,CAAE,CAAEd,WAAW,CAAEM,GAAI,CAAC,CAAC,CAAE;AAC5EG,UAAU,CAACI,QAAQ,CAACE,IAAI,CAACP,OAAO,CAAC,CAAE;AACnCT,cAAc,CAAC,CAAC,CAAE;AACpB,CAAE,MAAOiB,KAAK,CAAE,KAAAM,gBAAA,CAAAC,qBAAA,CACdJ,OAAO,CAACH,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAAE;AAC9CP,UAAU,CAAC,EAAAa,gBAAA,CAAAN,KAAK,CAACH,QAAQ,UAAAS,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBP,IAAI,UAAAQ,qBAAA,iBAApBA,qBAAA,CAAsBf,OAAO,GAAI,4BAA4B,CAAC,CAAE;AAC7E,CAAC,OAAS,CACRG,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CACF,CAAC,CAED,mBACEnB,IAAA,QAAKgC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/B7B,KAAA,QAAK4B,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjC,IAAA,OAAAiC,QAAA,CAAKrB,OAAO,CAAG,qBAAqB,CAAG,SAAS,CAAK,CAAC,CACrDI,OAAO,eAAIhB,IAAA,MAAGgC,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAEjB,OAAO,CAAI,CAAC,CAAC,GAAC,CACjD,CAACJ,OAAO,cACPR,KAAA,CAAAF,SAAA,EAAA+B,QAAA,eACEjC,IAAA,UACEkC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,qEAAc,CAC1BC,KAAK,CAAE1B,QAAS,CAChB2B,QAAQ,CAAGC,CAAC,EAAK3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CI,QAAQ,MACT,CAAC,cACFxC,IAAA,CAACH,UAAU,EACT4C,OAAO,CAAE,IAAK,CACdL,KAAK,CAAE5B,WAAY,CACnB6B,QAAQ,CAAGD,KAAK,EAAK3B,cAAc,CAAC2B,KAAK,CAAE,CAC3CM,UAAU,CAAE,CACVC,KAAK,CAAE,MAAM,CACbC,YAAY,CAAE,KAAK,CACnBC,WAAW,CAAE,MAAM,CACnBC,MAAM,CAAE,MACV,CAAE,CACH,CAAC,cACF9C,IAAA,WAAQ+C,OAAO,CAAE3B,aAAc,CAAC4B,QAAQ,CAAE9B,OAAQ,CAAAe,QAAA,CAC/Cf,OAAO,CAAG,iBAAiB,CAAG,OAAO,CAChC,CAAC,EACT,CAAC,cAEHd,KAAA,CAAAF,SAAA,EAAA+B,QAAA,eACEjC,IAAA,UACEkC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,sEAAe,CAC3BC,KAAK,CAAEtB,GAAI,CACXuB,QAAQ,CAAGC,CAAC,EAAKvB,MAAM,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACxCI,QAAQ,MACT,CAAC,cACFxC,IAAA,WAAQ+C,OAAO,CAAEnB,eAAgB,CAACoB,QAAQ,CAAE9B,OAAQ,CAAAe,QAAA,CACjDf,OAAO,CAAG,iBAAiB,CAAG,OAAO,CAChC,CAAC,EACT,CACH,EACE,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}