{"ast":null,"code":"import React,{useState}from'react';import PhoneInput from'react-phone-input-2';import'react-phone-input-2/lib/style.css';import'./login.css';import axios from'axios';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUpWithPhone=_ref=>{let{onLoginSuccess}=_ref;const[phoneNumber,setPhoneNumber]=useState('');const[lastName,setLastName]=useState('');const[otpSent,setOtpSent]=useState(false);const[otp,setOtp]=useState('');const[message,setMessage]=useState('');// برای نمایش پیام‌ها\n// تابع ارسال کد OTP\nconst handleSendOtp=async()=>{if(phoneNumber&&lastName){try{// درخواست به API برای ارسال کد OTP\nconst response=await axios.post('/api/send-otp',{phoneNumber,lastName});setOtpSent(true);// اگر ارسال موفق بود، وضعیت otpSent تغییر می‌کند\nsetMessage(response.data.message);// پیام موفقیت را نمایش می‌دهد\n}catch(error){console.error('Error sending OTP:',error);setMessage('خطا در ارسال کد تایید.');// نمایش پیام خطا در صورت بروز مشکل\n}}else{setMessage('لطفاً شماره تلفن و نام خانوادگی را وارد کنید.');}};// تابع تایید کد OTP\nconst handleVerifyOtp=async()=>{if(otp){try{// درخواست به API برای تایید کد OTP\nconst response=await axios.post('/api/verify-otp',{phoneNumber,otp});setMessage(response.data.message);// پیام موفقیت تایید\nonLoginSuccess();// اگر تایید موفقیت‌آمیز بود، به تابع موفقیت ورود می‌فرستد\n}catch(error){console.error('Error verifying OTP:',error);setMessage('کد یکبار مصرف نامعتبر است.');}}else{setMessage('لطفاً کد یکبار مصرف را وارد کنید.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"signup-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:otpSent?'تایید کد یکبار مصرف':'ثبت نام'}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message}),\" \",!otpSent?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",value:lastName,onChange:e=>setLastName(e.target.value),required:true}),/*#__PURE__*/_jsx(PhoneInput,{country:'ir',value:phoneNumber,onChange:value=>setPhoneNumber(value),inputStyle:{width:'100%',borderRadius:'5px',borderColor:'#ccc',height:'40px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendOtp,children:\"\\u0627\\u062F\\u0627\\u0645\\u0647\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u06A9\\u062F \\u06CC\\u06A9\\u0628\\u0627\\u0631 \\u0645\\u0635\\u0631\\u0641\",value:otp,onChange:e=>setOtp(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleVerifyOtp,children:\"\\u062A\\u0627\\u06CC\\u06CC\\u062F\"})]})]})});};export default SignUpWithPhone;","map":{"version":3,"names":["React","useState","PhoneInput","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SignUpWithPhone","_ref","onLoginSuccess","phoneNumber","setPhoneNumber","lastName","setLastName","otpSent","setOtpSent","otp","setOtp","message","setMessage","handleSendOtp","response","post","data","error","console","handleVerifyOtp","className","children","type","placeholder","value","onChange","e","target","required","country","inputStyle","width","borderRadius","borderColor","height","onClick"],"sources":["C:/Users/vipim/taabibeto/client/src/login/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport './login.css';\nimport axios from 'axios';\n\nconst SignUpWithPhone = ({ onLoginSuccess }) => {\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [message, setMessage] = useState(''); // برای نمایش پیام‌ها\n\n  // تابع ارسال کد OTP\n  const handleSendOtp = async () => {\n    if (phoneNumber && lastName) {\n      try {\n        // درخواست به API برای ارسال کد OTP\n        const response = await axios.post('/api/send-otp', { phoneNumber, lastName });\n        setOtpSent(true); // اگر ارسال موفق بود، وضعیت otpSent تغییر می‌کند\n        setMessage(response.data.message); // پیام موفقیت را نمایش می‌دهد\n      } catch (error) {\n        console.error('Error sending OTP:', error);\n        setMessage('خطا در ارسال کد تایید.'); // نمایش پیام خطا در صورت بروز مشکل\n      }\n    } else {\n      setMessage('لطفاً شماره تلفن و نام خانوادگی را وارد کنید.');\n    }\n  };\n\n  // تابع تایید کد OTP\n  const handleVerifyOtp = async () => {\n    if (otp) {\n      try {\n        // درخواست به API برای تایید کد OTP\n        const response = await axios.post('/api/verify-otp', { phoneNumber, otp });\n        setMessage(response.data.message); // پیام موفقیت تایید\n        onLoginSuccess(); // اگر تایید موفقیت‌آمیز بود، به تابع موفقیت ورود می‌فرستد\n      } catch (error) {\n        console.error('Error verifying OTP:', error);\n        setMessage('کد یکبار مصرف نامعتبر است.');\n      }\n    } else {\n      setMessage('لطفاً کد یکبار مصرف را وارد کنید.');\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <div className=\"form-box\">\n        <h2>{otpSent ? 'تایید کد یکبار مصرف' : 'ثبت نام'}</h2>\n        {message && <p className=\"message\">{message}</p>} {/* نمایش پیام‌ها */}\n        {!otpSent ? (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"نام خانوادگی\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              required\n            />\n            <PhoneInput\n              country={'ir'}\n              value={phoneNumber}\n              onChange={(value) => setPhoneNumber(value)}\n              inputStyle={{\n                width: '100%',\n                borderRadius: '5px',\n                borderColor: '#ccc',\n                height: '40px',\n              }}\n            />\n            <button onClick={handleSendOtp}>ادامه</button>\n          </>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"کد یکبار مصرف\"\n              value={otp}\n              onChange={(e) => setOtp(e.target.value)}\n              required\n            />\n            <button onClick={handleVerifyOtp}>تایید</button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpWithPhone;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}